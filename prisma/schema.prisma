// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mongodb"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(auto()) @map("_id") @db.ObjectId
  userId            String  @db.ObjectId
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?

  user User @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
  @@index([userId])
}

model Session {
  id           String   @id @default(auto()) @map("_id") @db.ObjectId
  sessionToken String   @unique
  userId       String   @db.ObjectId
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@index([userId])
}

model UserEmail {
  id                     String    @id @default(auto()) @map("_id") @db.ObjectId
  userId                 String    @db.ObjectId
  email                  String    @unique
  provider               String // e.g., 'zoho'
  providerId             String // ID from the email provider
  providerAccessToken    String? // OAuth access token
  providerRefreshToken   String? // OAuth refresh token
  providerTokenExpiresAt DateTime? // When the access token expires
  status                 String // e.g., 'active', 'suspended', 'deleted'
  subscriptionStatus     String // 'active', 'inactive'
  subscriptionExpiresAt  DateTime?
  lastActiveAt           DateTime  @default(now())
  createdAt              DateTime  @default(now())
  updatedAt              DateTime  @updatedAt

  user User @relation(fields: [userId], references: [id])

  @@index([userId])
  @@index([subscriptionStatus])
  @@index([lastActiveAt])
}

model User {
  id            String      @id @default(auto()) @map("_id") @db.ObjectId
  name          String?
  email         String?     @unique
  emailVerified DateTime?
  image         String?
  role          String      @default("user")
  createdAt     DateTime    @default(now())
  updatedAt     DateTime    @updatedAt
  accounts      Account[]
  sessions      Session[]
  emails        UserEmail[]
}
